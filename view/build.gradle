apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {

    //版本配置
    compileSdkVersion build_version.compileSdkVersion

    defaultConfig {
        minSdkVersion build_version.minSdkVersion
        targetSdkVersion build_version.targetSdkVersion
        versionCode build_version.versionCode
        versionName build_version.versionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        debug {
            //混淆
            minifyEnabled false
            //是否清理无用资源
            shrinkResources false
            //是否启用zipAlign压缩
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            //混淆
            minifyEnabled false
            //是否清理无用资源
            shrinkResources false
            //是否启用zipAlign压缩
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //防止编译的时候oom、GC
    dexOptions {
        preDexLibraries false
        maxProcessCount 8
        //分配给gradle的内存
        javaMaxHeapSize "4g"
    }

    lintOptions {
        //  true--所有正式版构建执行规则生成崩溃的lint检查，如果有崩溃问题将停止构建
        checkReleaseBuilds false
        // true--错误发生后停止gradle构建
        abortOnError false
    }

    aaptOptions {
        //停用 PNG 处理
        cruncherEnabled false
    }

}

dependencies {
    api libs.support_v7
    api libs.support_v4
    api libs.recyclerview
    //glide
    api libs.glide
    kapt libs.glide_compiler
    //kt
    api libs.kotlin_stdlib
    api libs.kotlin_coroutines
    api libs.kotlin_coroutines_core
}
